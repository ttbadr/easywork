@startuml Gateway Sequence

participant "Client" as client
participant "API Gateway" as gateway
participant "Token Manager" as token
participant "Third Party API" as third_party

== Normal Request Flow ==
client -> gateway: POST /gateway/example_service/users
note right
{
    "service": "example_service",
    "action": "create_user",
    "data": { ... }
}
end note

activate gateway
gateway -> gateway: 1. Validate request format
gateway -> gateway: 2. Extract service name & path
gateway -> token: 3. Get valid token
activate token

alt Token valid
    token --> gateway: Return existing token
else Token expired or about to expire
    token -> third_party: Refresh token request
    third_party --> token: New token
    token --> gateway: Return new token
end

deactivate token

gateway -> third_party: 4. Forward request with token
note right
- Replace Authorization header
- Forward original headers
- Forward query parameters
- Forward request body
end note

activate third_party
third_party --> gateway: Response
deactivate third_party

gateway -> gateway: 5. Package response
gateway --> client: Return response
deactivate gateway

== Token Refresh Background Process ==
token -> token: Periodic token check
activate token

alt Token needs refresh
    token -> third_party: OAuth2 refresh request
    activate third_party
    third_party --> token: New token & refresh token
    deactivate third_party
else Token needs reacquire
    token -> third_party: Token reacquire request
    activate third_party
    third_party --> token: New token
    deactivate third_party
end

token -> token: Update token in storage
deactivate token

@enduml 